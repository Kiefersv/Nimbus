# This workflow will perform the python testing

name: CI

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    name: Build (${{ matrix.python-version }} | ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('ci/environment-${{ matrix.python-version }}.yml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test_env # Defined in ci/environment*.yml
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          environment-file: ci/environment-${{ matrix.python-version }}.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Set up conda environment
        shell: bash -l {0}
        run: |
          python -m pip install numpy scipy xarray
          python -m pip install -e .
          conda list
      - name: Run Tests
        shell: bash -l {0}
        run: |
          py.test --cov=./ --cov-report=xml
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
